@using System.ServiceModel.Channels
@using BloodDonor_01.Models
@model BloodDonor_01.Models.NeedBloodModel

@{
    ViewBag.Title = "NeedBlood";
    List<Gender> listOfGenders = ViewBag.listOfGenders;
    List<BloodGroup> listOfBloodGroups = ViewBag.listOfBloodGroups;
    List<Area> listOfAreas = ViewBag.listOfAreas;
    List<Donor> topTenDonor = ViewBag.TopDonorList; 
    Layout = "~/Views/Shared/_LayoutMy.cshtml";
}

<h2>Blood Request From</h2>

@using (Html.BeginForm()) 
{
     @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        
        <div style="padding-left: 10px">
            <label style="color: blueviolet">
                @if (IsPost)
                {
                    @ViewBag.Message
                    if (ViewBag.Message == "Request accepted and recorded")
                    {
                         <hr />
                    if(topTenDonor.Count==0)
                    {
                        <h4 style="color: red">Sorry. We have no possible donor for your requested blood group. </h4>
                        <h4 style ="color: red">But your request is recorded. It will be viewed on "Recent Blood Request" section. So any one can see and can response you.</h4>               
                        <hr/>
                        <hr/>
                    }
                    else if(topTenDonor.Count>=1)
                    {
                        <h4 style="color: red">We have send message to all possible donors.</h4>
                    <hr />
                    <hr/>
                    <h5>Here is the ten top donors who are possibly can give blood for your provided blood group. You may contact with them.</h5>
                     <fieldset>        
        <hr />

        <table class="table table-bordered table-hover table-responsive table-striped" id="donorTable">
            <thead>
                <tr>
                    <th>Donor Name</th>                    
                    <th>Number of Donation</th>
                    <th>Last Donation Date</th>
                    <th>Phone</th>
                </tr>
            </thead>
            <tbody id="tablebody">
                @foreach (var donor in topTenDonor)
                {
                    <tr>
                        <td>@donor.FirstName @donor.MiddleName @donor.LastName</td>                        
                        <td>@donor.NumberOfDonation</td>
                        <td>@donor.LastDonationDate</td>
                        <td>@donor.Phone</td>
                    </tr>
                }
            </tbody>
        </table>


    </fieldset>
  
                    }
                    }                   

                }
               
      </label>

</div>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Name, new{@class="form-control"})
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>      

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.Gender, new SelectList(listOfGenders, "Id", "Name"), "--Select--", new { id = "genderId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Age, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Age)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroup, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.BloodGroup, new SelectList(listOfBloodGroups, "Id", "Name"), "--Select--", new { id = "bloodGroupId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BloodGroup)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Disease, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Disease, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Disease)
            </div>
        </div> 
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adrees, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Adrees, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Adrees)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.Area, new SelectList(listOfAreas, "Id", "Name"), "--Select--", new { id = "areaId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Area)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
   
}

@section scripts {
    <script src="~/Scripts/jquery-3.1.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}


<style>
    .field-validation-error {
        color: red;
    }
</style>