@using BloodDonor_01.Models
@model BloodDonor_01.Models.Donor

@{
    ViewBag.Title = "Edit";

    List<Area> listOfAreas = ViewBag.listOfAreas;
    Layout = "~/Views/Shared/_LayoutMy.cshtml";
}
@{
    var donor = Session["user"] as DonorViewModel;
}
<h2>Edit Your Info</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">      
        <div style="padding-left: 200px">
            <label style="color: blueviolet">
                @if (IsPost)
                {
                    @ViewBag.Message
                }

            </label>

        </div>

    <hr />
    @Html.ValidationSummary(true)
      
        <div class="form-group">
            @Html.Label("Id", "User ID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Id", donor.Id, new { @readonly = true, @class = "form-control" })
            </div>
        </div>
          
        <div class="form-group">
        @Html.Label("FirstName", "Name", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("FirstName", donor.FirstName + " " + donor.MiddleName + " " + donor.LastName, new { @readonly = true, @class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Phone, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.TextBox("phone", donor.Phone, new{@class="form-control"})
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
    </div>       

        <div class="form-group">
            <p style="color: red; font-size: 10px;">*If you don't want to change the area, then please select the showed 'Area' once again from the bellower one in dropdownlist</p>
            @Html.LabelFor(model => model.Area, new {@class = "control-label col-md-2"})
            <div class="col-md-10">           
                @Html.DropDownList("Area", new SelectList(listOfAreas, "Id", "Name"), donor.Area, new {id = "genderId", @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Area)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Password", donor.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfDonation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("NumberOfDonation", donor.NumberOfDonation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NumberOfDonation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastDonationDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("LastDonationDate", donor.LastDonationDate, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastDonationDate)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Change" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts {
    <script src="~/Scripts/jquery-3.1.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}